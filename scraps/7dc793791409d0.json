{
  "title": "rails の豆知識",
  "closed": false,
  "archived": true,
  "created_at": "2022-02-01",
  "comments": [
    {
      "author": "eggc",
      "created_at": "2022-02-01",
      "body_markdown": "development mode で http://localhost:3000/rails/info/routes のような感じで\n\n/rails/info/routes\n\nにアクセスするとルーティング一覧を見ることができる。bin/rails routes よりも速い。"
    },
    {
      "author": "eggc",
      "created_at": "2022-02-01",
      "body_markdown": "bin/rails routes は\n\n-  -g hogehoge で絞り込みできる。\n- -E で見やすくなる。\n\n[こんな実装](https://github.com/rails/rails/blob/7-0-stable/railties/lib/rails/commands/routes/routes_command.rb) になっていて、formatter を自作している人もいるようだ。rails server が起動しているなら bin/rails routes を実行するよりも http://locahost:3000/rails/info/routes にアクセスすると手っ取り早くルーティング一覧を見ることが出来る。これは development mode 限定の機能。",
      "body_updated_at": "2022-02-07"
    },
    {
      "author": "eggc",
      "created_at": "2022-02-07",
      "body_markdown": "named scope の引数は即時関数だけでなくて call メソッドが存在するオブジェクトなら何でもよい。rails guide には書いてないが[実装上たしかにそうなっている](https://github.com/rails/rails/blob/6bfc637659248df5d6719a86d2981b52662d9b50/activerecord/lib/active_record/scoping/named.rb#L181)。そのことを利用して[Query Object](https://techracho.bpsinc.jp/hachi8833/2017_10_25/47287)というデザインパターンにしている人もいる。",
      "body_updated_at": "2022-02-07"
    },
    {
      "author": "eggc",
      "created_at": "2022-02-16",
      "body_markdown": "バリデーションエラーのメッセージを多言語対応するときは下のような感じにしたら良い。\n\n```yaml\nja:\n  activerecord:\n    attributes:\n      my_model: 略\n    errors:\n      models:\n        my_model:\n          less_than_or_equal_to: は %{count} 以下にしてね\n          greater_than_or_equal_to: は %{count} 以上にしてね\n```\n\ni18n キーがわからなくなることが多いけど[実装](https://github.com/rails/rails/blob/e7547876dae099c71b90ee2957511605de997504/activemodel/lib/active_model/error.rb#L79-L82)を見たら確認できる。",
      "body_updated_at": "2022-02-16"
    },
    {
      "author": "eggc",
      "created_at": "2022-02-18",
      "body_markdown": "バリデーションのコンテキストを指定するときによくあるのは on: :create とか on: :update だけど on: :xxx のようにカスタムコンテキストを使うことも出来る。カスタムコンテキストを指定したバリデーションは普段は一切呼び出されない。 save(context: :setup) のようにコンテキストを明示た時にだけバリデーションを実行する。\n\nhttps://railsguides.jp/active_record_validations.html#on",
      "body_updated_at": "2022-02-18"
    }
  ]
}